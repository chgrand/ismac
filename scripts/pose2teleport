#!/usr/bin/env python

import rospy
import rosbag
from geometry_msgs.msg import Pose
from geometry_msgs.msg import PoseStamped
import sys
import json
import logging


class AgentConverter:
    def __init__(self, name):
        rospy.Subscriber("/"+name+"/pose", PoseStamped, self.callback)
        self.pub = rospy.Publisher('/'+name+'/teleport', Pose, queue_size = 1)
        
    def callback(self, pose_stamped):
        pose = Pose()
        pose.position = pose_stamped.pose.position
        pose.orientation = pose_stamped.pose.orientation
        self.pub.publish(pose)


if __name__ == '__main__':

    rospy.init_node('pose2teleport')
    if(len(sys.argv)<2):
        rospy.logerr("pose2teleop need name of agents as arguments")
        sys.exit()
    else:
        agents_list = []
        for agent in sys.argv[1:]:
            agents_list.append(agent)
        print(agents_list)
        rospy.loginfo("Node pose2teleop started")
        
        for agent in agents_list:
            AgentConverter(agent)
            
        rospy.spin()
